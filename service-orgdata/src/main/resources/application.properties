## application name
spring.application.name=service-orgdata

## Specify application name, and port on which this app should run (port 0 means that the port will be randomly assigned)
## by default app runs at 8080 port - we must change it
server.port = 8603

## Context path of the application
## http://localhost:8602/api/orgdata
server.servlet.context-path=/api

## if this option is not set all data will be cleared in database table when connect to it
spring.jpa.hibernate.ddl-auto = none


## Eureka-client configuration
# Set Eureka server url here, and specify Eureka instance ID generation pattern
eureka.client.serviceUrl.defaultZone=http://localhost:9001/eureka
eureka.instance.instance-id=${spring.application.name}:${server.port}

## logging is very important if you dont want search small error ib large log file
logging.file.path=_logs/service_orgdata
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n


##--MULTIPLE DATASOURCE PROPS--
##--Persistence Multiple dataSources configuration
#   *each datasource configured through individual config.file in /configs/

## MySQL DB connection props
#app.mysql.jdbc.driverClassName=com.mysql.cj.jdbc.Driver
#app.mysql.jdbc.url=jdbc:mysql://localhost:3306/employee_directory
#app.mysql.jdbc.user=root
#app.mysql.jdbc.pass=1234@root

## HSQLDB connection props
app.hsql.jdbc.driverClassName=org.hsqldb.jdbc.JDBCDriver
app.hsql.jdbc.url=jdbc:hsqldb:hsql://localhost:9000/timesheet
app.hsql.jdbc.user=SA
app.hsql.jdbc.pass=
